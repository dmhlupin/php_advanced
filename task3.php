<?php

// Статическая переменная "принадлежит" классу. Так как мы создаем объекты одного класса, они оба изменяют одно
// и то же статическое свойство класса, поэтому результат - 1,2,3,4
class A {
    public function foo() {
        static $x = 0; 
        echo ++$x. "<br>";
    }
}
$a1 = new A();
$a2 = new A();
$a1->foo();
$a2->foo();
$a1->foo();
$a2->foo();

// Здесь мы создаем наследника класса, и не смотря на то, что он наследует свойства и методы, 
// тем не менее они становятся ЕГО свойствами и методами, со своей выделенной под них памятью. Поэтому
// каждый экземпляр меняет статические свойства своего класса. Результат: 1, 1, 2, 2

class B {
    public function foo() {
        static $x = 0;
        echo ++$x. "<br>";
    }
}
class C extends B {
}
$b1 = new B();
$c1 = new C();
$b1->foo(); 
$c1->foo(); 
$b1->foo(); 
$c1->foo();